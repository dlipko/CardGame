#include "deck.h"

Deck::Deck()
{

}

void Deck::addCard(AbstractCard *new_card)
{
    // Поиск карты с таким id в колоде
    AbstractCard *card = findByCardId(new_card->getId());
    
    if (card)
    {
        // Такая карта уже есть в колоде
        // Проверяем не изменилась ли сила
        if (card->getStrength() != new_card->getStrength())
          card->setStrength(new_card->getStrength());
        // вызвать отрисовку этой карты???????????
        delete new_card;
    }
    else 
    {   
        _deck.push_back(new_card); 
        // вызвать добавление этой карты в колоду
    }
}

void Deck::removeCard(AbstractCard *card)
{
    _deck.removeOne(card);
}


AbstractCard * Deck::findByCardId(int cardId)
{
    for (QVector<AbstractCard *>::iterator i = _deck.begin();
         i != _deck.end(); ++i)
    {
        if ((*i)->getId() == cardId)
            return (*i);
    }
   return nullptr;
}

AbstractCard* Deck::removeCardByCardId(int cardId)
{
    AbstractCard * card = findByCardId(cardId);
    _deck.removeOne(card);
    return card;
}

int Deck::size()
{
    return _deck.size();
}


